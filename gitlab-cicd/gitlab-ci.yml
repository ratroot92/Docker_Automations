variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  # - test
  - deploy

build-dev:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  only:
    - dev
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}/dev:latest .
    - docker push ${CI_REGISTRY_IMAGE}/dev:latest

build-staging:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  only:
    - master
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}/staging:latest .
    - docker push ${CI_REGISTRY_IMAGE}/staging:latest

deploy-dev:
  only:
    - dev
  stage: deploy
  image: alpine:3.12
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    - ssh-keyscan -H '3.21.11.250' >> ~/.ssh/known_hosts
  script:
    - ssh  -o StrictHostKeyChecking=no ubuntu@3.21.11.250 "sudo docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN $CI_REGISTRY && sudo docker-compose pull backend && sudo docker-compose up -d backend"

deploy-staging:
  only:
    - master
  stage: deploy
  image: alpine:3.12
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    - ssh-keyscan -H '18.218.66.61' >> ~/.ssh/known_hosts
  script:
    - ssh  -o StrictHostKeyChecking=no ubuntu@18.218.66.61 "sudo docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN $CI_REGISTRY && sudo docker-compose pull backend && sudo docker-compose up -d backend"


version: "3.4"
services: 
  admin_db:
    image: mysql #v10.5.8
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes: 
        - ./admin_server/db/admin_db.sql:/docker-entrypoint-initdb.d/admin_db.sql
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=admin_db
    security_opt:
      - seccomp:unconfined
    ports:
      - "3306:3306"
    expose:
        - 3306
    # healthcheck:
    #   test: ["CMD", "mysqladmin" ,"ping", "-h", "192.168.100.35/"]
    #   timeout: 20s
    #   retries: 10

  admin_phpmyadmin:
      image: phpmyadmin/phpmyadmin
      restart: always
      environment:
        PMA_HOST: admin_db
        PMA_USER: root # Remove line for production
        PMA_PASSWORD: root # Remove line for production
      depends_on:
        - admin_db
      ports:
        - "5001:80"


#   exam_db:
#     image: mysql #v10.5.8
#     restart: always
#     command: --default-authentication-plugin=mysql_native_password
#     volumes: 
#         - ./exam_server/db/exam_db.sql:/docker-entrypoint-initdb.d/exam_db.sql
#     environment:
#         - MYSQL_ROOT_PASSWORD=root
#         - MYSQL_DATABASE=exam_db
#     security_opt:
#       - seccomp:unconfined



#   exam_phpmyadmin:
#     image: phpmyadmin/phpmyadmin
#     restart: always
#     environment:
#       PMA_HOST: exam_db
#       PMA_USER: root # Remove line for production
#       PMA_PASSWORD: root # Remove line for production
#     depends_on:
#       - exam_db
#     ports:
#       - "8001:80"


  admin_server:
        build:
          context: ./admin_server
          dockerfile: ../Dockerfile.admin_server
        container_name: admin_server
        ports:
          - 5000:5000
        restart: always
        volumes:
          - ./admin_server:/var/www/html/admin_server
        # depends_on:
            # admin_db:
            #           condition: service_healthy
        environment:
          - NODE_ENV=local
          - NODE_PORT=8000
          - NODE_IP=192.168.100.35
          - NODE_EXAM_SERVER_URL=http://192.168.100.35/exam_server/api
          - NODE_EXAM_SERVER_IP=192.168.100.35

  
         

  admin_frontend:
      build:
          context: ./admin_frontend
          dockerfile: ../Dockerfile.admin_frontend
          args:
            - REACT_APP_PORT=3000
      container_name: admin_frontend
      ports:
        - 3000:3000
      restart: always
      volumes:
        - ./admin_frontend:/var/www/html/admin_frontend
      depends_on:
        - admin_server
      links: 
        # - exam_db
        - admin_server
      environment:
        - REACT_APP_ENV=local
        - REACT_APP_ADMIN_SERVER_PORT=5000
        - REACT_APP_EXAM_SERVER_PORT=8000
        - REACT_APP_ADMIN_SERVER_URL=http://192.168.100.35/admin_server/api
        - REACT_APP_EXAM_SERVER_URL=http://192.168.100.35/exam_server/api

  
  exam_server:
    build:
      context: ./exam_server
      dockerfile: ../Dockerfile.exam_server
    container_name: exam_server
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - redis
    command: sh -c "/wait"
    volumes:
      - ./exam_server:/var/www/html/exam_server
    environment:
      - NODE_ENV=local
      - NODE_PORT=8000
      - NODE_IP=192.168.100.35
      - NODE_ADMIN_SERVER_URL=http://192.168.100.35/admin_server/api
      - NODE_ADMIN_SERVER_API=192.168.100.35/

  exam_frontend:
    build:
        context: ./exam_frontend
        dockerfile: ../Dockerfile.exam_frontend
        args:
            - REACT_APP_PORT=3001
    container_name: exam_frontend
    ports:
      - 3001:3001
    restart: always
    volumes:
      - ./exam_frontend:/var/www/html/exam_frontend
    depends_on:
      - exam_server
    links: 
    #   - exam_db
      - exam_server
    environment:
      - REACT_APP_ENV=local
      - REACT_APP_ADMIN_SERVER_PORT=5000
      - REACT_APP_EXAM_SERVER_PORT=8000
      - REACT_APP_ADMIN_SERVER_URL=http://192.168.100.35/admin_server/api
      - REACT_APP_EXAM_SERVER_URL=http://192.168.100.35/exam_server/api


  nginx:
      build:
          context: ./admin_server/nginx
          dockerfile: ../../Dockerfile.nginx
      container_name: nginx
      ports:
        - 80:80
      links:
        - admin_phpmyadmin
        - admin_frontend
        - admin_server
        - exam_frontend
        - exam_server
      depends_on:
        - admin_phpmyadmin
        - admin_frontend
        - admin_server
        - exam_frontend
        - exam_server

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    restart: on-failure

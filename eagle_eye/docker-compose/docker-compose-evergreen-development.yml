version: "3.7"
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.development
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      MONGO_URI: mongodb://db:27017/evergreen_dev_db
      NODE_ENV: development
      JWT_SECRET_KEY: 33f2566729df9c07c35155f8b39635ee9c822ade77d6ffb13e0448c673bacc1f990eb7e98147124adaf0399a961dfbbc
      CLIENT_ORIGIN: http://client:3000
    networks:
      - app-network
    volumes:
      - ./server:/app
      # - ./app/node_modules

  client:
    build:
      context: ./webClient
      dockerfile: Dockerfile.development
    environment:
      NEXT_PUBLIC_API_URL: http://0.0.0.0:8000
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - server
    volumes:
      - ./webClient:/app
      # - ./app/node_modules

  db:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    command: mongod
    # command: mongod --auth
    environment:
      # MONGO_INITDB_ROOT_USERNAME: admin
      # MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: evergreen_dev_db
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodb:/data/db

    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27018:27017"
    networks:
      - app-network

  webserver:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./webClient/nginx/client.conf:/etc/nginx/conf.d/client.conf
      # - /server/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - client
    networks:
      - app-network

volumes:
  mongodb:

networks:
  app-network:
    driver: bridge
